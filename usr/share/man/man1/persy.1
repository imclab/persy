.TH  "" ""
.SH Name
.PP
persy - syncronization based on Git
.SH Description
.PP
persy is an automated incremental backup tool for your personal
files\. it is comparable to dropbox and ubuntuone but with one
major difference: you dont need a fancy user account in some cloud
in the internet\. persy manages the synchronization in a personal
way: all you need is a server with ssh and git (in your local
network or remote in the internet doesnt matter)\. i have a old pc
here in my local network for example\.
.PP
persy is designed to run by its own on a computer as a revision
based backup application or in an environment with multiple
computers and at least one server to keep files and folder in sync
between them\.
.PP
persy tracks changes of local files (you can choose which ones) an
stores the changes in a local git repository\. if you want to
enable a remote backup or even a syncronization, persy can
syncronize and merge the changes with the server over a secure ssh
connection\.
.PP
Since persy builds upon the infrastructure offered by Git, it
shares its main strengths:
.IP \[bu] 2
speed: recovering your data is faster that cp -a\.\.\.
.IP \[bu] 2
full revision history
.IP \[bu] 2
space-efficient data store, with file compression and
textual/binary deltas
.IP \[bu] 2
efficient transport protocol to replicate the backup (faster than
rsync)
.SH Dependencies
.PP
persy needs the following software at run-time:
.IP \[bu] 2
git-core
.IP \[bu] 2
python-pyinotify - to get efficient information about filesystem
changes
.IP \[bu] 2
python-paramiko - ssh library to initialize a remote server
.IP \[bu] 2
gitk or qgit as a graphical git browser
.SH Installation
.PP
If you can, install the deb package\. It will take care of \"all\"
problems\. After the installaton you will have to do some
configuraton depending on your environment, needs and whishes
.SH Usage
.PP
How to configure persy and use it
.SS Setup for a local usage (settings menu)
.PP
For a quick start, just run persy
.PP
\f[CR]
      \ $\ persy\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 
\f[]
.PP
Now you have to add some directories or files to persy\. You can do
this in the settings menu into the \"local\" tab (take a look at
the screenshot)\.
.PP
[IMAGE: see illustration (http://cloud.github.com/downloads/kinkerl/persy/persy_settings_quickstart.png)]
.PP
The watched directories and files can be in absolute format (starts
with / ) or relative to the userhome\. If you want to add multiple
directories, they must be formated as a comma seperated list\.
.PP
After you added the directories (and maybe lookt at the other
configuration options too) you might want to actually start persy\.
just rightclick on the status icon and check the \"start/stop
persy\" checkbox\.
.PP
[IMAGE: see illustration (http://cloud.github.com/downloads/kinkerl/persy/start_persy.png)]
.SS Setup for a local usage (command line)
.PP
You can also do this configuration in the commandline\. This is
recommended for experienced users only and is not necessary if you
configured persy with the settings menu\.
.PP
\f[CR]
      \ $\ persy\ --config\ --uname=USERNAME\ \ \ \ \ \ #\ username\ used
      \ $\ persy\ --config\ --mail=MAIL\ \ \ \ \ \ \ \ \ \ \ #\ useremail\ used
      \ $\ persy\ --config\ --add_dir=DIR\ \ \ \ \ \ \ \ \ #\ DIR\ is\ the\ path\ to\ a\ directory\ in\ /home/user\ 
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ #\ (example:\ /home/username/documents)\.
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ #\ The\ directory\ is\ then\ integrated\ in\ persy\.
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ #\ From\ now\ on,\ you\ can\ start\ persy\ or/and\ 
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ #\ add\ it\ to\ your\ autostart:
      \ $\ persy\ --start\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ #\ starts\ persy
\f[]
.PP
You can configure your desktop environment to execute persy at
login\.
.SS Setup for syncing and/or using a remote backup
.PP
If you want to sync or backup your files on a remote server, you
have to \f[B]enable a public key authentication\f[] for the server
(more information (http://sial.org/howto/openssh/publickey-auth/))\.
No extra persy serversoftware is required as you can see in this
illustration:
.PP
[IMAGE: see illustration (http://cloud.github.com/downloads/kinkerl/persy/sync.png)]
.PP
The server just needs a ssh server with public key authentication
and the git-core package\.
.PP
You only have to configure the client computer with persy
installed! The normal workflow with a \f[B]blank remote Server\f[]
and an \f[B]already initialized local repository is\f[]:
.PP
\f[CR]
      \ $\ persy\ --config\ --hostname=SERVER\ \ \ \ \ #\ SERVER\ =\ location\ of\ the\ server
      \ $\ persy\ --config\ --path=PATH\ \ \ \ \ \ \ \ \ \ \ #\ PATH\ =\ absolute\ path\ of\ the\ gitrepository\ on\ 
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ #\ the\ server\ (path\ will\ be\ created\ if\ it\ does\ not\ exist)
      \ $\ persy\ --initRemote\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ #\ created\ a\ bare\ git\ repository\ on\ the\ server\ in\ PATH
      \ $\ persy\ --start\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ #\ starts\ persy\ 
\f[]
.PP
The normal workflow with a
\f[B]already initialized remote Server\f[] and
\f[B]no local repository\f[]\.
.PP
IMPORTANT: the synced directories should be empty before the sync\.
i had some problems with already existing files\. you can start a
sync and then add new files to the synced directory\.
.PP
\f[CR]
      \ $\ persy\ --config\ --uname=USERNAME\ \ \ \ \ \ #\ username\ used\ for\ the\ commits
      \ $\ persy\ --config\ --mail=MAIL\ \ \ \ \ \ \ \ \ \ \ #\ useremail\ used\ for\ the\ commits
      \ $\ persy\ --config\ --hostname=SERVER\ \ \ \ \ #\ SERVER\ =\ identifier(ip)\ of\ the\ server
      \ $\ persy\ --config\ --path=PATH\ \ \ \ \ \ \ \ \ \ \ #\ PATH\ =\ absolute\ path\ of\ the\ gitrepository\ on\ the\ 
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ #\ server
      \ $\ persy\ --config\ --add_dir=DIR\ \ \ \ \ \ \ \ \ #\ add\ the\ same\ DIR\ to\ persy\ as\ on\ the\ other\ machines
      \ $\ persy\ --syncwithremote\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ #\ connects\ to\ the\ remote\ server\ and\ 
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ #\ pulls\ the\ files\ from\ the\ git\ repository
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ #\ depending\ on\ the\ size\ of\ your\ existing\ repository
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ #\ this\ can\ take\ a\ long(!)\ time
      \ $\ persy\ --start\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ #\ starts\ persy
\f[]
.SH Advanced Usage
.PP
You can use persy without a centralized server to which every
clients connects and performes the synchronization (like in the
illustration image above)\. You can also run persy without a second
computer at all and synchronize with other parts(repositories) on
the filesystem\. Right now, this is not the intended use and i will
not cover this in the cli or the upcomming gui\. You can however
configure this in the git configuration for persy
~/\.persy/git/config and i try to take care of the internal
implementation\. If you have questions regarding esoteric setups,
feel free to mail me\.
.SS Commandline Options
.PP
please look at the help generated by persy (the command is: persy
--help) for more information about options
.PP
A development Option is --setenv\. This sets the environment
variables (GIT_DIR, GIT_WORK_TREE) of the parent shell in a way
that all git commands execute in the parent shell are operating on
the persy git repository\. Take a look at the help message when
using this option\.
.SH See also
.PP
You can report BUGS, ask QUESTIONS and DOWNLOAD persy on
launchpad (https://launchpad.net/persy) You can view the SOURCE and
DEVELOPMENT on github (http://wiki.github.com/kinkerl/persy)
.SH Author
.PP
Copyright (C) 2009, 2010 Dennis Schwertel <s@digitalkultur.net>
.SH License
.PP
persy is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version\.
.PP
persy is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\. See the GNU
General Public License for more details\.
.PP
You should have received a copy of the GNU General Public License
along with persy; if not, write to the Free Software Foundation,
Inc\., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
